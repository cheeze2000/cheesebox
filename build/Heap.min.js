class Heap{#f;#xs;constructor(t,s=[]){this.#f=t,this.#xs=s,this.length=s.length;for(let t=(this.length>>1)-1;0<=t;t--)this.#siftDown(t)}#siftDown(s){const h=this.#f,i=this.#xs;for(;s<this.length>>1;){var n=1+(s<<1);let t=h(i[n],i[s])<0?n:s;if(1+n<this.length&&h(i[1+n],i[t])<0&&(t=1+n),t==s)return;[i[s],i[t]]=[i[t],i[s]],s=t}}#siftUp(t){const s=this.#f,h=this.#xs;for(;0<t;){var i=t-1>>1;if(s(h[i],h[t])<=0)return;[h[t],h[i]]=[h[i],h[t]],t=i}}pop(){this.length--;var t=this.#xs[0];return this.#xs[0]=this.#xs[this.length],this.#siftDown(0),t}push(t){return this.#xs[this.length]=t,this.#siftUp(this.length),this.length++,this.length}top(){return this.#xs[0]}}
